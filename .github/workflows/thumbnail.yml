name: Create Sub-Issues

on:
  workflow_dispatch:

jobs:
  create_sub_issues:
    runs-on: ubuntu-latest
    permissions:
      issues: write

    steps:
      - name: Create 10 Sub-Issues
        id: create_issues
        uses: actions/github-script@v6
        with:
          script: |
            // This script uses a loop to create 10 new issues.
            const issueCount = 100;
            const newIssueNumbers = [];

            // Helper function to create a delay.
            const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));

            // Loop to create each sub-issue.
            for (let i = 1; i <= issueCount; i++) {
              const title = `Add thumbnail of project (${i})`;
              
              // Create the new sub-issue.
              const newIssue = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title
              });
              newIssueNumbers.push(newIssue.data.number);

              // Wait for 1 second before creating the next issue.
              await delay(5000);
            }
            // Set the new issue numbers as an output
            core.setOutput('new_issue_numbers', JSON.stringify(newIssueNumbers));

      - name: Update Parent Issue with Sub-Issues
        uses: actions/github-script@v6
        with:
          script: |
            // This script updates the parent issue with a checklist of sub-issues.
            const parentIssueNumber = 2;
            const newIssueNumbers = JSON.parse('${{ steps.create_issues.outputs.new_issue_numbers }}');
            
            let issueBody = `This issue is a parent for ${newIssueNumbers.length} sub-issues.\n\n### Sub-issues\n`;
            
            for (const issueNumber of newIssueNumbers) {
              const issue = await github.rest.issues.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber
              });
              issueBody += `- [ ] #${issue.data.number} ${issue.data.title}\n`;
            }

            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: parentIssueNumber,
              body: issueBody
            });
